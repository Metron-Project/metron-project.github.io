"use strict";(self.webpackChunkmetron_project_github_io=self.webpackChunkmetron_project_github_io||[]).push([[951],{6305:e=>{e.exports=JSON.parse('{"permalink":"/blog/march-2025-update","source":"@site/blog/2025-04-01-march-update/index.md","title":"March 2025 Update","description":"Monthly Statistics","date":"2025-04-01T08:38:00.000Z","tags":[{"inline":true,"label":"comic","permalink":"/blog/tags/comic"},{"inline":true,"label":"metadata","permalink":"/blog/tags/metadata"},{"inline":true,"label":"metron","permalink":"/blog/tags/metron"},{"inline":true,"label":"opencollective","permalink":"/blog/tags/opencollective"}],"readingTime":1.32,"hasTruncateMarker":false,"authors":[{"name":"Brian Pepple","title":"Founder of the Metron Project / Code Monkey","url":"https://github.com/bpepple","imageURL":"https://github.com/bpepple.png","key":"bpepple","page":null}],"frontMatter":{"slug":"march-2025-update","title":"March 2025 Update","date":"2025-04-01T08:38","authors":["bpepple"],"tags":["comic","metadata","metron","opencollective"]},"unlisted":false,"prevItem":{"title":"April / May 2025 Update","permalink":"/blog/april-may-2025-update"},"nextItem":{"title":"February 2025 Update","permalink":"/blog/february-2025-update"}}')},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>s});var i=n(6540);const r={},a=i.createContext(r);function o(e){const t=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(a.Provider,{value:t},e.children)}},9393:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var i=n(6305),r=n(4848),a=n(8453);const o={slug:"march-2025-update",title:"March 2025 Update",date:"2025-04-01T08:38",authors:["bpepple"],tags:["comic","metadata","metron","opencollective"]},s="March 2025 News",l={authorsImageUrls:[void 0]},c=[{value:"Monthly Statistics",id:"monthly-statistics",level:2},{value:"Rate Limiting",id:"rate-limiting",level:2},{value:"Recent Work",id:"recent-work",level:2},{value:"OpenCollective",id:"opencollective",level:2}];function h(e){const t={a:"a",em:"em",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"monthly-statistics",children:"Monthly Statistics"}),"\n",(0,r.jsxs)(t.p,{children:["During March the ",(0,r.jsx)(t.a,{href:"https://metron.cloud/",children:"Metron Project"})," added the following to its database:"]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["Users: ",(0,r.jsx)(t.strong,{children:"55"})]}),"\n",(0,r.jsxs)(t.li,{children:["Issues: ",(0,r.jsx)(t.strong,{children:"4,564"})]}),"\n",(0,r.jsxs)(t.li,{children:["Creators: ",(0,r.jsx)(t.strong,{children:"1,686"})]}),"\n",(0,r.jsxs)(t.li,{children:["Characters: ",(0,r.jsx)(t.strong,{children:"1,470"})]}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"Thanks to everyone that contributed!"}),"\n",(0,r.jsx)(t.h2,{id:"rate-limiting",children:"Rate Limiting"}),"\n",(0,r.jsxs)(t.p,{children:["On March 10th, the ",(0,r.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/API",children:"API"})," rate limit for the site was modified by adding another limit\nof 10,000 requests per day to the existing limit of 30 requests per minute. Most users shouldn't see any change, but\nthis will allow the site to better manage a sudden influx of new users like what happened when Comic Vine went down last\nfall."]}),"\n",(0,r.jsx)(t.h2,{id:"recent-work",children:"Recent Work"}),"\n",(0,r.jsxs)(t.p,{children:["Finished working on an ",(0,r.jsx)(t.a,{href:"https://codeberg.org/bpepple/barda",children:"internal tool"})," that uses Metron's POST API to add series to\nthe database, and have chosen a handful of users to give the appropriate permissions needed to run it. With any luck,\nthis should free up some of my time so that I can spend more time working on the site's code."]}),"\n",(0,r.jsxs)(t.p,{children:["One side effect of allowing some users to use the POST API is that I needed to ",(0,r.jsx)(t.em,{children:"disable"})," the ability to create creators\nfrom the issue form. This is something I had already been thinking about doing, since it had created a fairly annoying\namount of extra work on my end to remove the duplicate entries that had been created in error."]}),"\n",(0,r.jsx)(t.h2,{id:"opencollective",children:"OpenCollective"}),"\n",(0,r.jsxs)(t.p,{children:["We've recently set up an account at ",(0,r.jsx)(t.a,{href:"https://opencollective.com/metron",children:"Open Collective"})," if you wish to help defray the\nserver costs and help with increasing future server capacity. Any help would be greatly appreciated."]}),"\n",(0,r.jsx)(t.p,{children:"Anyway, that's all I got for this month. Take care!"})]})}function d(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}}}]);