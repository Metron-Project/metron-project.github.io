"use strict";(self.webpackChunkmetron_project_github_io=self.webpackChunkmetron_project_github_io||[]).push([[9573],{3631:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=t(5893),a=t(3905);const i={slug:"podman-gcd",title:"Using Podman to Run GCD Database Locally",date:"2022-10-08T11:35",authors:["bpepple"],tags:["comic","database","podman","mysql","gcd","grandcomicdatabase"]},o=void 0,s={permalink:"/blog/podman-gcd",source:"@site/blog/2022-10-08-podman/index.md",title:"Using Podman to Run GCD Database Locally",description:"I've had a few users ask me how to run a local copy of the Grand Comics Database, so I figured I'd do a short write-up on how I do it.",date:"2022-10-08T11:35:00.000Z",formattedDate:"October 8, 2022",tags:[{label:"comic",permalink:"/blog/tags/comic"},{label:"database",permalink:"/blog/tags/database"},{label:"podman",permalink:"/blog/tags/podman"},{label:"mysql",permalink:"/blog/tags/mysql"},{label:"gcd",permalink:"/blog/tags/gcd"},{label:"grandcomicdatabase",permalink:"/blog/tags/grandcomicdatabase"}],readingTime:5.065,hasTruncateMarker:!1,authors:[{name:"Brian Pepple",title:"Founder of the Metron Project / Code Monkey",url:"https://github.com/bpepple",imageURL:"https://github.com/bpepple.png",key:"bpepple"}],frontMatter:{slug:"podman-gcd",title:"Using Podman to Run GCD Database Locally",date:"2022-10-08T11:35",authors:["bpepple"],tags:["comic","database","podman","mysql","gcd","grandcomicdatabase"]},unlisted:!1,prevItem:{title:"Limited Series Type",permalink:"/blog/series-type-change"},nextItem:{title:"OS Upgrade",permalink:"/blog/ubuntu-2204-lts"}},d={authorsImageUrls:[void 0]},c=[];function l(e){const n={a:"a",code:"code",p:"p",pre:"pre",strong:"strong",...(0,a.ah)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["I've had a few users ask me how to run a local copy of the ",(0,r.jsx)(n.a,{href:"https://www.comics.org/",children:"Grand Comics Database"}),", so I figured I'd do a short write-up on how I do it."]}),"\n",(0,r.jsxs)(n.p,{children:["I use ",(0,r.jsx)(n.a,{href:"https://podman.io/",children:"Podman"})," for containers instead of ",(0,r.jsx)(n.a,{href:"https://www.docker.com/",children:"Docker"}),", but the differences between them is fairly minimal and this should give you a good idea of how to do it. Anyway, let's get started!"]}),"\n",(0,r.jsxs)(n.p,{children:["First off, you'll want to download the most recent database dump from GCD which can be found ",(0,r.jsx)(n.a,{href:"https://www.comics.org/download/",children:"here"}),". Once it's finished downloading, unzip the file:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"unzip current.zip -d /tmp/\n"})}),"\n",(0,r.jsx)(n.p,{children:"You should see output similar to this:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Archive:  current.zip\n  inflating: /tmp/2022-10-01.sql   \n"})}),"\n",(0,r.jsxs)(n.p,{children:["Ok, now that we've got the data from gcd, let's create a ",(0,r.jsx)(n.a,{href:"https://www.mysql.com/",children:"MySQL"})," container. We need to first pull a MySQL image, which can be done by running:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"podman pull docker.io/library/mysql:5.7\n"})}),"\n",(0,r.jsx)(n.p,{children:"After it's done downloading the image, you can confirm:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"podman images\n"})}),"\n",(0,r.jsx)(n.p,{children:"which should return output similar to this:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"bpepple@frodo ~ $ podman images mysql\nREPOSITORY               TAG         IMAGE ID      CREATED       SIZE\ndocker.io/library/mysql  5.7         eb175b0743cc  19 hours ago  448 MB\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Now we need to create the container. You'll want to replace user and mysql credentials with your own values. The ",(0,r.jsx)(n.code,{children:"volume"})," flag is where on your filesystem you want to save the database. The ",(0,r.jsx)(n.code,{children:"Z"})," suffix is used for systems, primarily ",(0,r.jsx)(n.a,{href:"https://www.redhat.com/en/topics/linux/what-is-selinux",children:"Red Hat"}),"-based, that use ",(0,r.jsx)(n.a,{href:"https://www.redhat.com/en/topics/linux/what-is-selinux",children:"SELinux"}),". If you don't use SELinux that can be dropped:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"podman run -d --name mysql -p 3306:3306 -e MYSQL_USER=bpepple -e MYSQL_PASSWORD=123456 -e MYSQL_DATABASE=gcd -e MYSQL_ROOT_PASSWORD=567890 --volume /home/bpepple/Storage/pods/mysql/:/var/lib/mysql:Z mysql:5.7\n"})}),"\n",(0,r.jsx)(n.p,{children:"Now let's verify that the container was created and is running by using the following:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"podman ps\n"})}),"\n",(0,r.jsx)(n.p,{children:"You should see output similar to this:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"bpepple@frodo ~ $ podman ps\nCONTAINER ID  IMAGE                       COMMAND CREATED       STATUS           PORTS                  NAMES\n400c957ae25d  docker.io/library/mysql:5.7 mysqld  7 seconds ago Up 7 seconds ago 0.0.0.0:3306->3306/tcp mysql\n"})}),"\n",(0,r.jsx)(n.p,{children:"Now we just need to dump the data from GCD into the database. We can do this by running:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"cat /tmp/2022-10-01.sql | podman exec -i mysql /usr/bin/mysql -u root --password=567890 gcd\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Depending on the specs of your machine, this might be a good time to grab some coffee, since the SQL dump is ",(0,r.jsx)(n.strong,{children:"very"})," large and will take awhile to finish. Once it's done, we can start using the database by attaching to the container:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"podman exec -it mysql mysql -ubpepple -p gcd\n"})}),"\n",(0,r.jsx)(n.p,{children:"This command will prompt you for your password, and then you'll see the MySQL prompt where you can run a simple SQL statement like so:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:" DESCRIBE gcd_issue;\n"})}),"\n",(0,r.jsx)(n.p,{children:"Which should produce output similar to this:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"+----------------------------+---------------+------+-----+---------------------+----------------+\n| Field                      | Type          | Null | Key | Default             | Extra          |\n+----------------------------+---------------+------+-----+---------------------+----------------+\n| id                         | int(11)       | NO   | PRI | NULL                | auto_increment |\n| number                     | varchar(50)   | NO   | MUL | NULL                |                |\n| volume                     | varchar(50)   | NO   | MUL |                     |                |\n| no_volume                  | tinyint(1)    | NO   | MUL | 0                   |                |\n| display_volume_with_number | tinyint(1)    | NO   | MUL | 0                   |                |\n| series_id                  | int(11)       | NO   | MUL | NULL                |                |\n| indicia_publisher_id       | int(11)       | YES  | MUL | NULL                |                |\n| indicia_pub_not_printed    | tinyint(1)    | NO   |     | NULL                |                |\n| brand_id                   | int(11)       | YES  | MUL | NULL                |                |\n| no_brand                   | tinyint(1)    | NO   | MUL | NULL                |                |\n| publication_date           | varchar(255)  | NO   |     | NULL                |                |\n| key_date                   | varchar(10)   | NO   | MUL | NULL                |                |\n| sort_code                  | int(11)       | NO   | MUL | NULL                |                |\n| price                      | varchar(255)  | NO   |     | NULL                |                |\n| page_count                 | decimal(10,3) | YES  |     | NULL                |                |\n| page_count_uncertain       | tinyint(1)    | NO   |     | 0                   |                |\n| indicia_frequency          | varchar(255)  | NO   |     |                     |                |\n| no_indicia_frequency       | tinyint(1)    | NO   | MUL | 0                   |                |\n| editing                    | longtext      | NO   |     | NULL                |                |\n| no_editing                 | tinyint(1)    | NO   | MUL | 0                   |                |\n| notes                      | longtext      | NO   |     | NULL                |                |\n| created                    | datetime      | NO   |     | 1901-01-01 00:00:00 |                |\n| modified                   | datetime      | NO   | MUL | 1901-01-01 00:00:00 |                |\n| deleted                    | tinyint(1)    | NO   | MUL | 0                   |                |\n| is_indexed                 | tinyint(1)    | NO   | MUL | 0                   |                |\n| isbn                       | varchar(32)   | NO   | MUL |                     |                |\n| valid_isbn                 | varchar(13)   | NO   | MUL |                     |                |\n| no_isbn                    | tinyint(1)    | NO   | MUL | 0                   |                |\n| variant_of_id              | int(11)       | YES  | MUL | NULL                |                |\n| variant_name               | varchar(255)  | NO   |     |                     |                |\n| barcode                    | varchar(38)   | NO   | MUL |                     |                |\n| no_barcode                 | tinyint(1)    | NO   |     | 0                   |                |\n| title                      | varchar(255)  | NO   | MUL |                     |                |\n| no_title                   | tinyint(1)    | NO   | MUL | 0                   |                |\n| on_sale_date               | varchar(10)   | NO   | MUL | NULL                |                |\n| on_sale_date_uncertain     | tinyint(1)    | NO   |     | 0                   |                |\n| rating                     | varchar(255)  | NO   | MUL | NULL                |                |\n| no_rating                  | tinyint(1)    | NO   | MUL | NULL                |                |\n| volume_not_printed         | tinyint(1)    | NO   |     | NULL                |                |\n| no_indicia_printer         | tinyint(1)    | NO   |     | NULL                |                |\n+----------------------------+---------------+------+-----+---------------------+----------------+\n40 rows in set (0.00 sec)\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"Great, we've got the database up and running! To logout from the container just type:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\\q\n"})}),"\n",(0,r.jsx)(n.p,{children:"To stop the container, you would just use the following:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"podman stop mysql\n"})}),"\n",(0,r.jsxs)(n.p,{children:["And that's it! Podman has tons of niceties (like auto-updating images, using ",(0,r.jsx)(n.a,{href:"https://systemd.io/",children:"systemd"})," for container start-ups, etc.) and I'd encourage you to read up on using some its many features. If it get some free time, I'll do a follow-up article about using ",(0,r.jsx)(n.a,{href:"https://www.python.org/",children:"Python"})," to query the database and using that data for things like writing metadata to comic archives."]})]})}function p(e={}){const{wrapper:n}={...(0,a.ah)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},3905:(e,n,t)=>{t.d(n,{ah:()=>c});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var d=r.createContext({}),c=function(e){var n=r.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,d=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),h=c(t),u=a,m=h["".concat(d,".").concat(u)]||h[u]||l[u]||i;return t?r.createElement(m,o(o({ref:n},p),{},{components:t})):r.createElement(m,o({ref:n},p))}));p.displayName="MDXCreateElement"}}]);