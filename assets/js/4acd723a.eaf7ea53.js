"use strict";(self.webpackChunkmetron_project_github_io=self.webpackChunkmetron_project_github_io||[]).push([[6504],{8697:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>u,contentTitle:()=>o,default:()=>l,frontMatter:()=>i,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"metroninfo/schemas/v1.0","title":"Version 1.0","description":"Source on GitHub","source":"@site/docs/metroninfo/schemas/v1.0.md","sourceDirName":"metroninfo/schemas","slug":"/metroninfo/schemas/v1.0","permalink":"/docs/metroninfo/schemas/v1.0","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":25,"frontMatter":{"sidebar_position":25,"title":"Version 1.0"},"sidebar":"tutorialSidebar","previous":{"title":"Schemas","permalink":"/docs/category/schemas"},"next":{"title":"Metron","permalink":"/docs/metron"}}');var a=s(4848),r=s(8453),x=s(1028);const m='<?xml version="1.0" encoding="utf-8"?>\n<xs:schema elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">\n    <xs:element name="MetronInfo" type="metroninfoType" />\n\n    \x3c!-- Complex Types --\x3e\n    <xs:complexType name="metroninfoType">\n        <xs:all>\n            <xs:element name="IDS" type="idsType" minOccurs="0" />\n            <xs:element name="Publisher" type="publisherType" minOccurs="0" />\n            <xs:element name="Series" type="seriesType" />\n            <xs:element name="MangaVolume" type="xs:string" minOccurs="0" /> \x3c!-- This is used for Manga --\x3e\n            <xs:element name="CollectionTitle" type="xs:string" minOccurs="0" />\n            <xs:element name="Number" type="xs:string" minOccurs="0" />\n            <xs:element name="Stories" type="storyType" minOccurs="0" /> \x3c!-- Story titles in issue --\x3e\n            <xs:element name="Summary" type="xs:string" minOccurs="0" />\n            <xs:element name="Prices" type="pricesType" minOccurs="0" />\n            <xs:element name="CoverDate" type="xs:date" minOccurs="0" />\n            <xs:element name="StoreDate" type="xs:date" minOccurs="0" />\n            <xs:element name="PageCount" type="xs:nonNegativeInteger" minOccurs="0" default="0" />\n            <xs:element name="Notes" type="xs:string" minOccurs="0" />\n            <xs:element name="Genres" type="genresType" minOccurs="0" />\n            <xs:element name="Tags" type="tagsType" minOccurs="0" />\n            <xs:element name="Arcs" type="arcsType" minOccurs="0" />\n            <xs:element name="Characters" type="charactersType" minOccurs="0" />\n            <xs:element name="Teams" type="teamsType" minOccurs="0" />\n            <xs:element name="Universes" type="universesType" minOccurs="0" />\n            <xs:element name="Locations" type="locationsType" minOccurs="0" />\n            <xs:element name="Reprints" type="reprintsType" minOccurs="0" />\n            <xs:element name="GTIN" type="gtinType" minOccurs="0" />\n            <xs:element name="AgeRating" type="ageRatingType" minOccurs="0" default="Unknown" />\n            <xs:element name="URLs" type="urlsType" minOccurs="0" />\n            <xs:element name="Credits" type="creditsType" minOccurs="0" />\n            <xs:element name="LastModified" type="xs:dateTime" minOccurs="0" />\n        </xs:all>\n    </xs:complexType>\n\n    <xs:complexType name="urlsType">\n        <xs:sequence>\n            <xs:element name="URL" type="urlType" minOccurs="0" maxOccurs="unbounded" />\n        </xs:sequence>\n        <xs:assert test="count(URL[@primary = true()]) &lt;= 1" />\n    </xs:complexType>\n\n    <xs:complexType name="urlType">\n        <xs:simpleContent>\n            <xs:extension base="xs:string">\n                <xs:attribute name="primary" type="xs:boolean" />\n            </xs:extension>\n        </xs:simpleContent>\n    </xs:complexType>\n\n    <xs:complexType name="idsType">\n        <xs:sequence>\n            <xs:element name="ID" type="idType" minOccurs="0" maxOccurs="unbounded" />\n        </xs:sequence>\n        <xs:assert test="count(ID[@primary = true()]) &lt;= 1" />\n    </xs:complexType>\n\n    <xs:complexType name="idType">\n        <xs:simpleContent>\n            <xs:extension base="xs:string">\n                <xs:attribute name="source" type="informationSource" use="required" />\n                <xs:attribute name="primary" type="xs:boolean" />\n            </xs:extension>\n        </xs:simpleContent>\n    </xs:complexType>\n\n    <xs:complexType name="storyType">\n        <xs:sequence>\n            <xs:element name="Story" type="resourceType" minOccurs="0" maxOccurs="unbounded" />\n        </xs:sequence>\n    </xs:complexType>\n\n    \x3c!-- Base type to add \'id\' attribute to the various resources --\x3e\n    <xs:complexType name="resourceType">\n        <xs:simpleContent>\n            <xs:extension base="xs:string">\n                <xs:attribute name="id" type="xs:string" />\n            </xs:extension>\n        </xs:simpleContent>\n    </xs:complexType>\n\n    <xs:complexType name="publisherType">\n        <xs:all>\n            <xs:element name="Name" type="xs:string" />\n            <xs:element name="Imprint" type="resourceType" minOccurs="0" />\n        </xs:all>\n        <xs:attribute name="id" type="xs:string" />\n    </xs:complexType>\n\n    <xs:complexType name="seriesType">\n        <xs:all>\n            <xs:element name="Name" type="xs:string" />\n            <xs:element name="SortName" type="xs:string" minOccurs="0" />\n            <xs:element name="Volume" type="xs:nonNegativeInteger" minOccurs="0" />\n            <xs:element name="Format" type="formatType" minOccurs="0" />\n            <xs:element name="StartYear" type="xs:gYear" minOccurs="0" />\n            <xs:element name="IssueCount" type="xs:positiveInteger" minOccurs="0" />\n            <xs:element name="VolumeCount" type="xs:positiveInteger" minOccurs="0" />\n            <xs:element name="AlternativeNames" type="alternativeNameType" minOccurs="0" />\n        </xs:all>\n        <xs:attribute name="lang" type="languageCode" default="en" />\n        <xs:attribute name="id" type="xs:string" />\n    </xs:complexType>\n\n    <xs:complexType name="alternativeNameType">\n        <xs:sequence>\n            <xs:element name="AlternativeName" type="nameType" minOccurs="0" maxOccurs="unbounded" />\n        </xs:sequence>\n    </xs:complexType>\n\n    \x3c!-- Alternative Series Name Base type --\x3e\n    <xs:complexType name="nameType">\n        <xs:simpleContent>\n            <xs:extension base="xs:string">\n                <xs:attribute name="id" type="xs:string" />\n                <xs:attribute name="lang" type="languageCode" default="en" />\n            </xs:extension>\n        </xs:simpleContent>\n    </xs:complexType>\n\n    <xs:complexType name="charactersType">\n        <xs:sequence>\n            <xs:element name="Character" type="resourceType" minOccurs="0" maxOccurs="unbounded" />\n        </xs:sequence>\n    </xs:complexType>\n\n    <xs:complexType name="teamsType">\n        <xs:sequence>\n            <xs:element name="Team" type="resourceType" minOccurs="0" maxOccurs="unbounded" />\n        </xs:sequence>\n    </xs:complexType>\n\n    <xs:complexType name="locationsType">\n        <xs:sequence>\n            <xs:element name="Location" type="resourceType" minOccurs="0" maxOccurs="unbounded" />\n        </xs:sequence>\n    </xs:complexType>\n\n    <xs:complexType name="tagsType">\n        <xs:sequence>\n            <xs:element name="Tag" type="resourceType" minOccurs="0" maxOccurs="unbounded" />\n        </xs:sequence>\n    </xs:complexType>\n\n    <xs:complexType name="reprintsType">\n        <xs:sequence>\n            <xs:element name="Reprint" type="resourceType" minOccurs="0" maxOccurs="unbounded" />\n        </xs:sequence>\n    </xs:complexType>\n\n    <xs:complexType name="universesType">\n        <xs:sequence>\n            <xs:element name="Universe" type="universeType" minOccurs="0" maxOccurs="unbounded" />\n        </xs:sequence>\n    </xs:complexType>\n\n    <xs:complexType name="universeType">\n        <xs:all>\n            <xs:element name="Name" type="xs:string" />\n            <xs:element name="Designation" type="xs:string" minOccurs="0" />\n        </xs:all>\n        <xs:attribute name="id" type="xs:string" />\n    </xs:complexType>\n\n    <xs:complexType name="arcsType">\n        <xs:sequence>\n            <xs:element name="Arc" type="arcType" minOccurs="0" maxOccurs="unbounded" />\n        </xs:sequence>\n    </xs:complexType>\n\n    <xs:complexType name="arcType">\n        <xs:all>\n            <xs:element name="Name" type="xs:string" />\n            <xs:element name="Number" type="xs:positiveInteger" minOccurs="0" />\n        </xs:all>\n        <xs:attribute name="id" type="xs:string" />\n    </xs:complexType>\n\n    <xs:complexType name="creditsType">\n        <xs:sequence>\n            <xs:element name="Credit" type="creditType" minOccurs="0" maxOccurs="unbounded" />\n        </xs:sequence>\n    </xs:complexType>\n\n    <xs:complexType name="roleType">\n        <xs:simpleContent>\n            <xs:extension base="roleValues">\n                <xs:attribute name="id" type="xs:string" />\n            </xs:extension>\n        </xs:simpleContent>\n    </xs:complexType>\n\n    <xs:complexType name="rolesType">\n        <xs:sequence>\n            <xs:element name="Role" type="roleType" minOccurs="0" maxOccurs="unbounded" />\n        </xs:sequence>\n    </xs:complexType>\n\n    <xs:complexType name="creditType">\n        <xs:all>\n            <xs:element name="Creator" type="resourceType" />\n            <xs:element name="Roles" type="rolesType" minOccurs="0" />\n        </xs:all>\n    </xs:complexType>\n\n    <xs:complexType name="genreType">\n        <xs:simpleContent>\n            <xs:extension base="xs:string">\n                <xs:attribute name="id" type="xs:string" />\n            </xs:extension>\n        </xs:simpleContent>\n    </xs:complexType>\n\n    <xs:complexType name="genresType">\n        <xs:sequence>\n            <xs:element name="Genre" type="genreType" minOccurs="0" maxOccurs="unbounded" />\n        </xs:sequence>\n    </xs:complexType>\n\n    <xs:complexType name="pricesType">\n        <xs:sequence>\n            <xs:element name="Price" type="priceType" minOccurs="0" maxOccurs="unbounded" />\n        </xs:sequence>\n    </xs:complexType>\n\n    <xs:complexType name="priceType">\n        <xs:simpleContent>\n            <xs:extension base="xs:decimal">\n                <xs:attribute name="country" type="countryCode" use="required" />\n            </xs:extension>\n        </xs:simpleContent>\n    </xs:complexType>\n\n    <xs:complexType name="gtinType">\n        <xs:all>\n            <xs:element name="ISBN" minOccurs="0" />\n            <xs:element name="UPC" minOccurs="0" />\n        </xs:all>\n    </xs:complexType>\n\n    \x3c!-- Simple Types --\x3e\n    <xs:simpleType name="formatType">\n        <xs:restriction base="xs:string">\n            <xs:enumeration value="Annual" />\n            <xs:enumeration value="Digital Chapter" />\n            <xs:enumeration value="Graphic Novel" />\n            <xs:enumeration value="Hardcover" />\n            <xs:enumeration value="Limited Series" /> \x3c!-- Used for mini/maxi series --\x3e\n            <xs:enumeration value="Omnibus" />\n            <xs:enumeration value="One-Shot" />\n            <xs:enumeration value="Single Issue" /> \x3c!-- Used for Ongoing/Cancelled series --\x3e\n            <xs:enumeration value="Trade Paperback" />\n        </xs:restriction>\n    </xs:simpleType>\n\n    <xs:simpleType name="informationSource">\n        <xs:restriction base="xs:string">\n            <xs:enumeration value="AniList" />\n            <xs:enumeration value="Comic Vine" />\n            <xs:enumeration value="Grand Comics Database" />\n            <xs:enumeration value="Kitsu" />  \x3c!-- ID\'s contain letters, hyphens, and numbers --\x3e\n            <xs:enumeration value="MangaDex" /> \x3c!-- ID\'s contain letters, hyphens, and numbers --\x3e\n            <xs:enumeration value="MangaUpdates" />\n            <xs:enumeration value="Marvel" />\n            <xs:enumeration value="Metron" />\n            <xs:enumeration value="MyAnimeList" />\n            <xs:enumeration value="League of Comic Geeks" />\n        </xs:restriction>\n    </xs:simpleType>\n\n    <xs:simpleType name="roleValues">\n        <xs:restriction base="xs:string">\n            <xs:enumeration value="Writer" />\n            <xs:enumeration value="Script" />\n            <xs:enumeration value="Story" />\n            <xs:enumeration value="Plot" />\n            <xs:enumeration value="Interviewer" />\n            <xs:enumeration value="Artist" />\n            <xs:enumeration value="Penciller" />\n            <xs:enumeration value="Breakdowns" />\n            <xs:enumeration value="Illustrator" />\n            <xs:enumeration value="Layouts" />\n            <xs:enumeration value="Inker" />\n            <xs:enumeration value="Embellisher" />\n            <xs:enumeration value="Finishes" />\n            <xs:enumeration value="Ink Assists" />\n            <xs:enumeration value="Colorist" />\n            <xs:enumeration value="Color Separations" />\n            <xs:enumeration value="Color Assists" />\n            <xs:enumeration value="Color Flats" />\n            <xs:enumeration value="Digital Art Technician" />\n            <xs:enumeration value="Gray Tone" />\n            <xs:enumeration value="Letterer" />\n            <xs:enumeration value="Cover" />\n            <xs:enumeration value="Editor" />\n            <xs:enumeration value="Consulting Editor" />\n            <xs:enumeration value="Assistant Editor" />\n            <xs:enumeration value="Associate Editor" />\n            <xs:enumeration value="Group Editor" />\n            <xs:enumeration value="Senior Editor" />\n            <xs:enumeration value="Managing Editor" />\n            <xs:enumeration value="Collection Editor" />\n            <xs:enumeration value="Production" />\n            <xs:enumeration value="Designer" />\n            <xs:enumeration value="Logo Design" />\n            <xs:enumeration value="Translator" />\n            <xs:enumeration value="Supervising Editor" />\n            <xs:enumeration value="Executive Editor" />\n            <xs:enumeration value="Editor In Chief" />\n            <xs:enumeration value="President" />\n            <xs:enumeration value="Publisher" />\n            <xs:enumeration value="Chief Creative Officer" />\n            <xs:enumeration value="Executive Producer" />\n            <xs:enumeration value="Other" />\n        </xs:restriction>\n    </xs:simpleType>\n\n    \x3c!--\n        There\'s no governing body for age ratings, so let\'s use something fairly simple to cover most cases.\n        It won\'t be perfect, but adding different values for all the different ways publishers use them seems\n        unnecessarily difficult. The age ranges are just suggestions.\n    --\x3e\n    <xs:simpleType name="ageRatingType">\n        <xs:restriction base="xs:string">\n            <xs:enumeration value="Unknown" />\n            <xs:enumeration value="Everyone" /> \x3c!-- Appropriate for readers of all ages. --\x3e\n            <xs:enumeration value="Teen" /> \x3c!-- Appropriate for readers age 12 and older. --\x3e\n            <xs:enumeration value="Teen Plus" /> \x3c!-- Appropriate for readers age 15 and older. --\x3e\n            <xs:enumeration value="Mature" /> \x3c!-- Appropriate for readers age 17 and older. --\x3e\n            <xs:enumeration value="Explicit" /> \x3c!-- Contains Gore, Sexually Explicit material that would be more extreme than R rating --\x3e\n            <xs:enumeration value="Adult" /> \x3c!-- Likely pornographic in nature --\x3e\n        </xs:restriction>\n    </xs:simpleType>\n\n    <xs:simpleType name="countryCode">\n        <xs:restriction base="xs:string">\n            <xs:pattern value="[A-Z][A-Z]" />\n        </xs:restriction>\n    </xs:simpleType>\n\n    <xs:simpleType name="languageCode">\n        <xs:restriction base="xs:string">\n            <xs:pattern value="[a-z][a-z]" />\n        </xs:restriction>\n    </xs:simpleType>\n</xs:schema>\n',i={sidebar_position:25,title:"Version 1.0"},o=void 0,u={},c=[];function p(e){const n={a:"a",p:"p",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"https://github.com/Metron-Project/metroninfo/blob/master/schema/v1.0/MetronInfo.xsd",children:"Source"})," on GitHub"]}),"\n","\n",(0,a.jsx)(x.A,{className:"language-xml",children:m})]})}function l(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}}}]);