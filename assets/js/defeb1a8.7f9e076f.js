"use strict";(self.webpackChunkmetron_project_github_io=self.webpackChunkmetron_project_github_io||[]).push([[4205],{3559:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var i=n(8863),o=n(4848),r=n(8453);const a={slug:"february-2025-update",title:"February 2025 Update",date:"2025-03-01T10:38",authors:["bpepple"],tags:["comic","metadata","comicvine","metron","gcd","grandcomicsdatabase","opencollective","readinglist","cbl"]},s="February 2025 News",l={authorsImageUrls:[void 0]},c=[{value:"Monthly Statistics",id:"monthly-statistics",level:2},{value:"Recent Work",id:"recent-work",level:2},{value:"Comic Book Reading Lists",id:"comic-book-reading-lists",level:2},{value:"Rate Limiting",id:"rate-limiting",level:2},{value:"OpenCollective",id:"opencollective",level:2}];function h(e){const t={a:"a",code:"code",em:"em",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h2,{id:"monthly-statistics",children:"Monthly Statistics"}),"\n",(0,o.jsxs)(t.p,{children:["During February the ",(0,o.jsx)(t.a,{href:"https://metron.cloud/",children:"Metron Project"})," added the following to its database:"]}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["Users: ",(0,o.jsx)(t.strong,{children:"51"})]}),"\n",(0,o.jsxs)(t.li,{children:["Issues: ",(0,o.jsx)(t.strong,{children:"2,674"})]}),"\n",(0,o.jsxs)(t.li,{children:["Creators: ",(0,o.jsx)(t.strong,{children:"526"})]}),"\n",(0,o.jsxs)(t.li,{children:["Characters: ",(0,o.jsx)(t.strong,{children:"879"})]}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:"Thanks to everyone that contributed!"}),"\n",(0,o.jsx)(t.h2,{id:"recent-work",children:"Recent Work"}),"\n",(0,o.jsxs)(t.p,{children:["One of my goals for 2025 was to make the project less dependent on me, and for most of this month I've been working on\nthe tooling to allowing some users to use the POST API to add comics to the database. This will allow other folks to\nhandle ",(0,o.jsx)(t.a,{href:"https://github.com/Metron-Project/metron/discussions/306",children:"requests"})," to add series to Metron. With luck, I should\nfinish next month, and I'll start looking at what users to promote."]}),"\n",(0,o.jsx)(t.h2,{id:"comic-book-reading-lists",children:"Comic Book Reading Lists"}),"\n",(0,o.jsxs)(t.p,{children:["Recently, I've been looking at Comic Book Reading Lists since\na ",(0,o.jsx)(t.a,{href:"https://github.com/Metron-Project/metron/issues/302",children:"bug report"})," was opened to add support for generating them.\nCurrently, users use ",(0,o.jsx)(t.a,{href:"https://github.com/DieselTech/CBL-ReadingLists",children:"CBL's"})," that are imported into their comic server\nof choice (",(0,o.jsx)(t.a,{href:"https://www.kavitareader.com/",children:"Kavita"}),", ",(0,o.jsx)(t.a,{href:"https://github.com/ajslater/codex",children:"Codex"}),", etc.), which seems\nnon-optimal primarily since, in essence, it's another database of information. Now, this makes sense, since for a long\ntime the only source of usable data via an API was ",(0,o.jsx)(t.a,{href:"https://comicvine.gamespot.com/",children:"Comic Vine"}),", which hasn't had a\ndeveloper presence in ",(0,o.jsx)(t.em,{children:"years"}),", and having a new feature added to their site is ",(0,o.jsx)(t.strong,{children:"extremely"})," unlikely."]}),"\n",(0,o.jsxs)(t.p,{children:["I think a better solution would be for the other databases that offer an API (",(0,o.jsx)(t.a,{href:"https://www.comics.org/api/",children:"GCD"})," &\nMetron) to have the option for users to create reading lists (similar to ",(0,o.jsx)(t.a,{href:"https://www.themoviedb.org/",children:"MovieDB"}),") and\nhave that data available either by generating a file or through an API call. Now, to do this we would need to work with\nthe comic server developers to determine exactly what data they would need, though it would probably look similar to\nthis:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-shell",children:'{\n  "arc": {\n    "name": "Foo Bar Wars"\n  }\n  "issues": {\n    "issue": {\n      "id": {\n      "cv_id": 9999\n      "metron": 5678\n      "gcd": 9856\n      }\n      "index": 0\n    }\n    "issue": {\n      "id": {\n      "cv_id": 12345\n      "metron": 9999\n      "gcd": 123\n      }\n      "index": 1\n    }\n  }\n}\n'})}),"\n",(0,o.jsxs)(t.p,{children:["The current standard (CBL) and the recent ",(0,o.jsx)(t.a,{href:"https://github.com/ComicReadingLists/json-cbl-standard",children:"json-cbl-standard"}),"\ncontains a look of information that I can't see a comic server needing, primarily all the series-level info which the\ncomic servers should already have in their databases. Of course, I'd love to hear from any developer in this space to\nverify that."]}),"\n",(0,o.jsx)(t.p,{children:"Once the basic functionality was added, importing any existing CBL into GCD or Metron should be fairly trivial, since\nMetron links other sites issue id's (GCD would be able to use Metron's API to link since they don't track this\ninformation)."}),"\n",(0,o.jsxs)(t.p,{children:["Anyway, those are some of my quick thoughts on what the future of Comic Book Reading Lists could look like, and if\nanyone has interest in working on this potential future project, contact me\non ",(0,o.jsx)(t.a,{href:"https://github.com/Metron-Project/metron",children:"GitHub"}),"\nor ",(0,o.jsx)(t.a,{href:"https://matrix.to/#/#metron-general:matrix.org",children:"Matrix"}),"."]}),"\n",(0,o.jsx)(t.h2,{id:"rate-limiting",children:"Rate Limiting"}),"\n",(0,o.jsxs)(t.p,{children:["One thing I've been debating is whether to modify our Rate Limiting policy. The primary reason for this is there are a\n",(0,o.jsx)(t.em,{children:"lot"})," of user that hammer the API for 24+ hours straight for days on end, and I'm contemplating ",(0,o.jsx)(t.em,{children:"adding"})," a total\nnumber of API hits per day (maybe something like 10,000) in ",(0,o.jsx)(t.em,{children:"addition"})," to the 30/hour to ease the server load."]}),"\n",(0,o.jsxs)(t.p,{children:["Now doing this will make it a bit harder implement to write software for the API since the developer will need to track\nthe API rate between sessions, but there are libraries\nlike ",(0,o.jsx)(t.a,{href:"https://pyratelimiter.readthedocs.io/en/latest/",children:"pyrate-limiter"})," which use a SQLite or Redis backend to make\nthis easier to implement."]}),"\n",(0,o.jsxs)(t.p,{children:["Anyway, this is something I'm just mulling over and if you want to weigh-in you can\non ",(0,o.jsx)(t.a,{href:"https://matrix.to/#/#metron-general:matrix.org",children:"Matrix"})," or in\na ",(0,o.jsx)(t.a,{href:"https://github.com/Metron-Project/metron/discussions",children:"GitHub Discussion"}),"."]}),"\n",(0,o.jsx)(t.h2,{id:"opencollective",children:"OpenCollective"}),"\n",(0,o.jsxs)(t.p,{children:["We've recently set up an account at ",(0,o.jsx)(t.a,{href:"https://opencollective.com/metron",children:"Open Collective"})," if you wish to help defray the\nserver costs and help with increasing future server capacity. Any help would be greatly appreciated."]}),"\n",(0,o.jsx)(t.p,{children:"Anyway, that's all I got for this month. Take care!"})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>s});var i=n(6540);const o={},r=i.createContext(o);function a(e){const t=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),i.createElement(r.Provider,{value:t},e.children)}},8863:e=>{e.exports=JSON.parse('{"permalink":"/blog/february-2025-update","source":"@site/blog/2025-03-01-february-update/index.md","title":"February 2025 Update","description":"Monthly Statistics","date":"2025-03-01T10:38:00.000Z","tags":[{"inline":true,"label":"comic","permalink":"/blog/tags/comic"},{"inline":true,"label":"metadata","permalink":"/blog/tags/metadata"},{"inline":true,"label":"comicvine","permalink":"/blog/tags/comicvine"},{"inline":true,"label":"metron","permalink":"/blog/tags/metron"},{"inline":true,"label":"gcd","permalink":"/blog/tags/gcd"},{"inline":true,"label":"grandcomicsdatabase","permalink":"/blog/tags/grandcomicsdatabase"},{"inline":true,"label":"opencollective","permalink":"/blog/tags/opencollective"},{"inline":true,"label":"readinglist","permalink":"/blog/tags/readinglist"},{"inline":true,"label":"cbl","permalink":"/blog/tags/cbl"}],"readingTime":3.38,"hasTruncateMarker":false,"authors":[{"name":"Brian Pepple","title":"Founder of the Metron Project / Code Monkey","url":"https://github.com/bpepple","imageURL":"https://github.com/bpepple.png","key":"bpepple","page":null}],"frontMatter":{"slug":"february-2025-update","title":"February 2025 Update","date":"2025-03-01T10:38","authors":["bpepple"],"tags":["comic","metadata","comicvine","metron","gcd","grandcomicsdatabase","opencollective","readinglist","cbl"]},"unlisted":false,"prevItem":{"title":"March 2025 Update","permalink":"/blog/march-2025-update"},"nextItem":{"title":"January 2025 Update","permalink":"/blog/january-2025-update"}}')}}]);