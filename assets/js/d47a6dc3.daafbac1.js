"use strict";(self.webpackChunkmetron_project_github_io=self.webpackChunkmetron_project_github_io||[]).push([[5783],{8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>o});var s=n(6540);const i={},a=s.createContext(i);function r(e){const t=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(a.Provider,{value:t},e.children)}},9075:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"esak","title":"Esak","description":"What is it?","source":"@site/docs/esak.md","sourceDirName":".","slug":"/esak","permalink":"/docs/esak","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":40,"frontMatter":{"sidebar_position":40,"label":"Esak"},"sidebar":"tutorialSidebar","previous":{"title":"Mokkari","permalink":"/docs/mokkari"},"next":{"title":"Simyan","permalink":"/docs/simyan"}}');var i=n(4848),a=n(8453);const r={sidebar_position:40,label:"Esak"},o="Esak",c={},l=[{value:"What is it?",id:"what-is-it",level:2},{value:"Installation",id:"installation",level:2},{value:"Example Usage",id:"example-usage",level:2},{value:"Documentation",id:"documentation",level:2},{value:"Code",id:"code",level:2},{value:"Bugs / Feature Requests",id:"bugs--feature-requests",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"esak",children:"Esak"})}),"\n",(0,i.jsx)(t.h2,{id:"what-is-it",children:"What is it?"}),"\n",(0,i.jsxs)(t.p,{children:["Esak is a python wrapper for ",(0,i.jsx)(t.a,{href:"https://developer.marvel.com/docs",children:"Marvel's API"}),"."]}),"\n",(0,i.jsx)(t.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"$ pip3 install --user esak\n"})}),"\n",(0,i.jsx)(t.h2,{id:"example-usage",children:"Example Usage"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"import esak\n\n# Your own config file to keep your private key local and secret\nfrom config import public_key, private_key\n\n# Authenticate with Marvel, with keys I got from http://developer.marvel.com/\nm = esak.api(public_key, private_key)\n\n# Get all comics from this week, sorted alphabetically by title\npulls = sorted(m.comics_list({\n    'format': \"comic\",\n    'formatType': \"comic\",\n    'noVariants': True,\n    'dateDescriptor': \"thisWeek\",\n    'limit': 100}),\n    key=lambda comic: comic.title)\n\nfor comic in pulls:\n    # Write a line to the file with the name of the issue, and the\n    # id of the series\n    print(f'{comic.title} (series #{comic.series.id})')\n"})}),"\n",(0,i.jsx)(t.h2,{id:"documentation",children:"Documentation"}),"\n",(0,i.jsxs)(t.p,{children:["Can be found at ",(0,i.jsx)(t.a,{href:"https://esak.readthedocs.io/en/stable/",children:"ReadTheDocs"}),"."]}),"\n",(0,i.jsx)(t.h2,{id:"code",children:"Code"}),"\n",(0,i.jsxs)(t.p,{children:["The projects code can be found at ",(0,i.jsx)(t.a,{href:"https://github.com/Metron-Project/esak",children:"GitHub"}),"."]}),"\n",(0,i.jsx)(t.h2,{id:"bugs--feature-requests",children:"Bugs / Feature Requests"}),"\n",(0,i.jsxs)(t.p,{children:["Any bugs or feature requests can be filed ",(0,i.jsx)(t.a,{href:"https://github.com/Metron-Project/esak/issues",children:"here"}),"."]})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);