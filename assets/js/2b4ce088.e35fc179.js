"use strict";(self.webpackChunkmetron_project_github_io=self.webpackChunkmetron_project_github_io||[]).push([[4030],{4238:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var n=r(5893),a=r(3905);const i={sidebar_position:70,label:"Metron-Tagger"},o="Metron-Tagger",s={id:"metron-tagger",title:"Metron-Tagger",description:"What is it?",source:"@site/docs/metron-tagger.md",sourceDirName:".",slug:"/metron-tagger",permalink:"/docs/metron-tagger",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:70,frontMatter:{sidebar_position:70,label:"Metron-Tagger"},sidebar:"tutorialSidebar",previous:{title:"Darkseid",permalink:"/docs/darkseid"}},l={},c=[{value:"What is it?",id:"what-is-it",level:2},{value:"Installation",id:"installation",level:2},{value:"Documentation",id:"documentation",level:2},{value:"Code",id:"code",level:2},{value:"Bugs / Feature Requests",id:"bugs--feature-requests",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,a.ah)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"metron-tagger",children:"Metron-Tagger"}),"\n",(0,n.jsx)(t.h2,{id:"what-is-it",children:"What is it?"}),"\n",(0,n.jsx)(t.p,{children:"Metron-Tagger is a command line tool to tag comic archives with metadata from Metron Comic Book Database."}),"\n",(0,n.jsx)(t.h2,{id:"installation",children:"Installation"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"$ pip3 install --user metron-tagger\n"})}),"\n",(0,n.jsx)(t.h2,{id:"documentation",children:"Documentation"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"usage: metron-tagger [-h] [-r] [-o] [--id ID] [-d] [--ignore-existing] [-i] [--missing] [-s]\n                     [-e] [-z] [--delete-original] [--version]\n                     path [path ...]\n\nRead in a file or set of files, and return the result.\n\npositional arguments:\n  path                 Path of a file or a folder of files.\n\noptions:\n  -h, --help           show this help message and exit\n  -r, --rename         Rename comic archive from the files metadata. (default: False)\n  -o, --online         Search online and attempt to identify comic archive. (default: False)\n  --id ID              Identify file for tagging with the Metron Issue Id. (default: None)\n  -d, --delete         Delete the metadata tags from the file. (default: False)\n  --ignore-existing    Ignore files that have existing metadata tag. (default: False)\n  -i, --interactive    Interactively query the user when there are matches for an online search.\n                       (default: False)\n  --missing            List files without metadata. (default: False)\n  -s, --sort           Sort files that contain metadata tags. (default: False)\n  -e, --export-to-cb7  Export a CBZ (zip) or CBR (rar) archive to a CB7 (7zip) archive.\n                       (default: False)\n  -z, --export-to-cbz  Export a CB7 (7zip) or CBR (rar) archive to a CBZ (zip) archive.\n                       (default: False)\n  --delete-original    Delete the original archive after successful export to another format.\n                       (default: False)\n  --version            Show the version number and exit\n\n"})}),"\n",(0,n.jsx)(t.h2,{id:"code",children:"Code"}),"\n",(0,n.jsxs)(t.p,{children:["The projects code can be found at ",(0,n.jsx)(t.a,{href:"https://github.com/Metron-Project/metron-tagger",children:"GitHub"}),"."]}),"\n",(0,n.jsx)(t.h2,{id:"bugs--feature-requests",children:"Bugs / Feature Requests"}),"\n",(0,n.jsxs)(t.p,{children:["Any bugs or feature requests can be filed ",(0,n.jsx)(t.a,{href:"https://github.com/Metron-Project/metron-tagger/issues",children:"here"}),"."]})]})}function u(e={}){const{wrapper:t}={...(0,a.ah)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},3905:(e,t,r)=>{r.d(t,{ah:()=>c});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),h=c(r),f=a,p=h["".concat(l,".").concat(f)]||h[f]||d[f]||i;return r?n.createElement(p,o(o({ref:t},u),{},{components:r})):n.createElement(p,o({ref:t},u))}));u.displayName="MDXCreateElement"}}]);