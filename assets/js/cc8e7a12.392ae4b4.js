"use strict";(self.webpackChunkmetron_project_github_io=self.webpackChunkmetron_project_github_io||[]).push([[9328],{1577:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var n=r(5893),a=r(3905);const s={slug:"april-2024-update",title:"April 2024 Update",date:"2024-05-11T04:22",authors:["bpepple"],tags:["comic","database","metron","metrontagger"]},i="April 2024 News",o={permalink:"/blog/april-2024-update",source:"@site/blog/2024-04-01-april-update/index.md",title:"April 2024 Update",description:"Monthly Statistics",date:"2024-05-11T04:22:00.000Z",tags:[{label:"comic",permalink:"/blog/tags/comic"},{label:"database",permalink:"/blog/tags/database"},{label:"metron",permalink:"/blog/tags/metron"},{label:"metrontagger",permalink:"/blog/tags/metrontagger"}],readingTime:.61,hasTruncateMarker:!1,authors:[{name:"Brian Pepple",title:"Founder of the Metron Project / Code Monkey",url:"https://github.com/bpepple",imageURL:"https://github.com/bpepple.png",key:"bpepple"}],frontMatter:{slug:"april-2024-update",title:"April 2024 Update",date:"2024-05-11T04:22",authors:["bpepple"],tags:["comic","database","metron","metrontagger"]},unlisted:!1,nextItem:{title:"February 2024 Update",permalink:"/blog/february-2024-update"}},l={authorsImageUrls:[void 0]},c=[{value:"Monthly Statistics",id:"monthly-statistics",level:2},{value:"Digital Chapters",id:"digital-chapters",level:2}];function p(e){const t={a:"a",code:"code",em:"em",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,a.ah)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"monthly-statistics",children:"Monthly Statistics"}),"\n",(0,n.jsxs)(t.p,{children:["During March and April the ",(0,n.jsx)(t.a,{href:"https://metron.cloud/",children:"Metron Project"})," added the following to its database:"]}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["Users: ",(0,n.jsx)(t.strong,{children:"75"})]}),"\n",(0,n.jsxs)(t.li,{children:["Issues: ",(0,n.jsx)(t.strong,{children:"4,495"})]}),"\n",(0,n.jsxs)(t.li,{children:["Creators: ",(0,n.jsx)(t.strong,{children:"255"})]}),"\n",(0,n.jsxs)(t.li,{children:["Characters: ",(0,n.jsx)(t.strong,{children:"1,632"})]}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"Thanks to everyone that contributed!"}),"\n",(0,n.jsx)(t.h2,{id:"digital-chapters",children:"Digital Chapters"}),"\n",(0,n.jsxs)(t.p,{children:["Recently a new series type, ",(0,n.jsx)(t.em,{children:"Digital Chapters"}),", was added to Metron. This was to facilitate adding digital comics, like\n",(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.a,{href:"https://metron.cloud/series/dc-comics-bombshells-2015/",children:"DC Comics Bombshells"})}),". This series type appends the\nword ",(0,n.jsx)(t.code,{children:"Digital"})," to the series display name and adds ",(0,n.jsx)(t.code,{children:"Chapter"})," to\nthe ",(0,n.jsx)(t.a,{href:"https://metron.cloud/issue/batman-beyond-2012-1/",children:"issue display name"}),". When adding ",(0,n.jsx)(t.em,{children:"Digital Chapters"})," series, the\nprint version should ",(0,n.jsx)(t.em,{children:(0,n.jsx)(t.strong,{children:"not"})})," be added as an associated seres, but added as reprints to the appropriate issues. For an\nexample of this, please refer to this ",(0,n.jsx)(t.a,{href:"https://metron.cloud/issue/batman-the-adventures-continue-2020-1-1/",children:"issue"}),"."]}),"\n",(0,n.jsx)(t.p,{children:"Anyway, that's all I've got for this month. Take Care!"})]})}function d(e={}){const{wrapper:t}={...(0,a.ah)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},3905:(e,t,r)=>{r.d(t,{ah:()=>c});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),h=c(r),u=a,m=h["".concat(l,".").concat(u)]||h[u]||p[u]||s;return r?n.createElement(m,i(i({ref:t},d),{},{components:r})):n.createElement(m,i({ref:t},d))}));d.displayName="MDXCreateElement"}}]);